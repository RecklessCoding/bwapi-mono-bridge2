/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.9
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace SWIG.BWAPI {

using System;
using System.Runtime.InteropServices;

public partial class Color : Type {
  private HandleRef swigCPtr;

  internal Color(IntPtr cPtr, bool cMemoryOwn) : base(bwapiPINVOKE.Color_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(Color obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~Color() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          bwapiPINVOKE.delete_Color(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  
public override int GetHashCode()
{
   return this.swigCPtr.Handle.GetHashCode();
}

public override bool Equals(object obj)
{
    bool equal = false;
    if (obj is Color)
      equal = (((Color)obj).swigCPtr.Handle == this.swigCPtr.Handle);
    return equal;
}
  
public bool Equals(Color obj) 
{
    if (obj == null) return false;
    return (obj.swigCPtr.Handle == this.swigCPtr.Handle);
}

public static bool operator ==(Color obj1, Color obj2)
{
    if (object.ReferenceEquals(obj1, obj2)) return true;
    if (object.ReferenceEquals(obj1, null)) return false;
    if (object.ReferenceEquals(obj2, null)) return false;
   
    return obj1.Equals(obj2);
}

public static bool operator !=(Color obj1, Color obj2)
{
    if (object.ReferenceEquals(obj1, obj2)) return false;
    if (object.ReferenceEquals(obj1, null)) return true;
    if (object.ReferenceEquals(obj2, null)) return true;

    return !obj1.Equals(obj2);
}




  public Color() : this(bwapiPINVOKE.new_Color__SWIG_0(), true) {
  }

  public Color(int id) : this(bwapiPINVOKE.new_Color__SWIG_1(id), true) {
  }

  public Color(int red, int green, int blue) : this(bwapiPINVOKE.new_Color__SWIG_2(red, green, blue), true) {
  }

  public int red() {
    int ret = bwapiPINVOKE.Color_red(swigCPtr);
    return ret;
  }

  public int green() {
    int ret = bwapiPINVOKE.Color_green(swigCPtr);
    return ret;
  }

  public int blue() {
    int ret = bwapiPINVOKE.Color_blue(swigCPtr);
    return ret;
  }

}

}
